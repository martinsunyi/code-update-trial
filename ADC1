1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : ADC1.C
**     Project   : SunKing
**     Processor : MC9S08QD4CSC
**     Component : Init_ADC
**     Version   : Component 01.209, Driver 01.18, CPU db: 3.00.002
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2010-1-26, 17:12
**     Abstract  :
**          This file implements the ADC (ADC) module initialization 
**          according to the Peripheral Initialization Bean settings, and defines
**          interrupt service routines prototypes. 
 
**     Settings  :
**          Bean name                                      : ADC1
**          Device                                         : ADC
**          Prescaler                                      : 1
**          Sample time                                    : 48.00 us
**          Conversion mode                                : Single conversion
**          Result data formats                            : 10-bit right
**          ADC Channels                                   : 2
**          Pins                                           : PTA0_KBI1P0_TPM1CH0_ADC1P0
**                                                           PTA2_KBI1P2_TCLK1_ADC1P2
**          Interrupt                                      : Vadc1
**          Conversion complete interrupt                  : Enabled
**          ISR name                                       : ADCisr
**          Initial channel select                         : ADC Disabled
**          Call Init method                               : yes
**          Enable module                                  : Disabled
 
**     Contents  :
**         Init - void ADC1_Init(void);
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/
 
/* MODULE ADC1. */
 
#include "ADC1.h"
 
/*
** ###################################################################
**
**  The interrupt service routine(s) must be implemented
**  by user in one of the following user modules.
**
**  If the "Generate ISR" option is enabled, Processor Expert generates
**  ISR templates in the CPU event module.
**
**  User modules:
**      SunKing.c
**      Events.c
**      SunKingTypeDef.c
**      SunKingHeader.c
**      SunKingSubroutines.c
**
** ###################################################################
ISR( ADCisr)
{
  // NOTE: The routine should include the following actions to obtain
  //       correct functionality of the hardware.
  //
  // The interrupt will remain pending as long as the COCO flag is set.
  // The COCO bit is cleared whenever the ADC status and control (ADCxSC1) register is written.
  // The COCO bit is also cleared whenever the ADC result registers (ADCxRH or ADCxRL) are read.
  // Example: word result;
  //          result = ADCR;
 
 
}
*/
 
/*
** ===================================================================
**     Method      :  ADC1_Init (component Init_ADC)
**
**     Description :
**         This method initializes registers of the ADC module
**         according to this Peripheral Initialization Bean settings.
**         Call this method in user code to initialize the module.
**         By default, the method is called by PE automatically; see
**         "Call Init method" property of the bean for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void ADC1_Init(void)
{
  /* APCTL1: ??=0,??=0,??=0,??=0,ADPC3=0,ADPC2=0,ADPC1=0,ADPC0=0 */
  setReg8(APCTL1, 0x00);                
  /* ADCCFG: ADLPC=0,ADIV1=0,ADIV0=0,ADLSMP=1,MODE1=1,MODE0=0,ADICLK1=0,ADICLK0=0 */
  setReg8(ADCCFG, 0x18);                
  /* ADCCV: ??=0,??=0,??=0,??=0,??=0,??=0,ADCV9=0,ADCV8=0,ADCV7=0,ADCV6=0,ADCV5=0,ADCV4=0,ADCV3=0,ADCV2=0,ADCV1=0,ADCV0=0 */
  setReg16(ADCCV, 0x00U);               
  /* ADCSC2: ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,??=0,??=0,??=0,??=0 */
  setReg8(ADCSC2, 0x00);                
  /* ADCSC1: COCO=0,AIEN=1,ADCO=0,ADCH4=1,ADCH3=1,ADCH2=1,ADCH1=1,ADCH0=1 */
  setReg8(ADCSC1, 0x5F);                
}
/* END ADC1. */
 
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.07 [04.34]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
